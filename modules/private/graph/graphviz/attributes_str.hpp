#pragma once

#include "fwd.hpp"

namespace hana::graphviz
{
	constexpr std::string_view graph_str[] = {
		"_background",
		"bb",
		"beautify",
		"bgcolor",
		"center",
		"charset",
		"class",
		"clusterrank",
		"colorscheme",
		"comment",
		"compound",
		"concentrate",
		"Damping",
		"defaultdist",
		"dim",
		"dimen",
		"diredgeconstraints",
		"dpi",
		"epsilon",
		"esep",
		"fontcolor",
		"fontname",
		"fontnames",
		"fontpath",
		"fontsize",
		"forcelabels",
		"gradientangle",
		"href",
		"id",
		"imagepath",
		"inputscale",
		"K",
		"label",
		"label_scheme",
		"labeljust",
		"labelloc",
		"landscape",
		"layerlistsep",
		"layers",
		"layerselect",
		"layersep",
		"layout",
		"levels",
		"levelsgap",
		"lheight",
		"linelength",
		"lp",
		"lwidth",
		"margin",
		"maxiter",
		"mclimit",
		"mindist",
		"mode",
		"model",
		"newrank",
		"nodesep",
		"nojustify",
		"normalize",
		"notranslate",
		"nslimit",
		"nslimit1",
		"oneblock",
		"ordering",
		"orientation",
		"outputorder",
		"overlap",
		"overlap_scaling",
		"overlap_shrink",
		"pack",
		"packmode",
		"pad",
		"page",
		"pagedir",
		"quadtree",
		"quantum",
		"rankdir",
		"ranksep",
		"ratio",
		"remincross",
		"repulsiveforce",
		"resolution",
		"root",
		"rotate",
		"rotation",
		"scale",
		"searchsize",
		"sep",
		"showboxes",
		"size",
		"smoothing",
		"sortv",
		"splines",
		"start",
		"style",
		"stylesheet",
		"target",
		"TBbalance",
		"tooltip",
		"truecolor",
		"URL",
		"viewport",
		"voro_margin",
		"xdotversion"
	};

	constexpr std::string_view node_str[] = {
		"area",
		"class",
		"color",
		"colorscheme",
		"comment",
		"distortion",
		"fillcolor",
		"fixedsize",
		"fontcolor",
		"fontname",
		"fontsize",
		"gradientangle",
		"group",
		"height",
		"href",
		"id",
		"image",
		"imagepos",
		"imagescale",
		"label",
		"labelloc",
		"layer",
		"margin",
		"nojustify",
		"ordering",
		"orientation",
		"penwidth",
		"peripheries",
		"pin",
		"pos",
		"rects",
		"regular",
		"root",
		"samplepoints",
		"shape",
		"shapefile",
		"showboxes",
		"sides",
		"skew",
		"sortv",
		"style",
		"target",
		"tooltip",
		"URL",
		"vertices",
		"width",
		"xlabel",
		"xlp",
		"z"
	};

	constexpr std::string_view subgraph_str[] = {
		"area",
		"bb",
		"bgcolor",
		"class",
		"cluster",
		"color",
		"colorscheme",
		"fillcolor",
		"fontcolor",
		"fontname",
		"fontsize",
		"gradientangle",
		"href",
		"id",
		"K",
		"label",
		"labeljust",
		"labelloc",
		"layer",
		"lheight",
		"lp",
		"lwidth",
		"margin",
		"nojustify",
		"normalize",
		"pencolor",
		"penwidth",
		"peripheries",
		"sortv",
		"style",
		"target",
		"tooltip",
		"URL"
	};

	constexpr std::string_view edge_str[] = {
		"arrowhead",
		"arrowsize",
		"arrowtail",
		"class",
		"color",
		"colorscheme",
		"comment",
		"constraint",
		"decorate",
		"dir",
		"edgehref",
		"edgetarget",
		"edgetooltip",
		"edgeURL",
		"fillcolor",
		"fontcolor",
		"fontname",
		"fontsize",
		"head_lp",
		"headclip",
		"headhref",
		"headlabel",
		"headport",
		"headtarget",
		"headtooltip",
		"headURL",
		"href",
		"id",
		"label",
		"labelangle",
		"labeldistance",
		"labelfloat",
		"labelfontcolor",
		"labelfontname",
		"labelfontsize",
		"labelhref",
		"labeltarget",
		"labeltooltip",
		"labelURL",
		"layer",
		"len",
		"lhead",
		"lp",
		"ltail",
		"minlen",
		"nojustify",
		"penwidth",
		"pos",
		"samehead",
		"sametail",
		"showboxes",
		"style",
		"tail_lp",
		"tailclip",
		"tailhref",
		"taillabel",
		"tailport",
		"tailtarget",
		"tailtooltip",
		"tailURL",
		"target",
		"tooltip",
		"URL",
		"weight",
		"xlabel",
		"xlp"
	};

	std::string_view to_string(GraphAttr attr) noexcept;
	std::string_view to_string(NodeAttr attr) noexcept;
	std::string_view to_string(SubgraphAttr attr) noexcept;
	std::string_view to_string(EdgeAttr attr) noexcept;
}
